<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<entry key = "name">Графер</entry>
<entry key = "titles">Функция
Параметрическое
Неявное задание
Транслирование</entry>
<entry key = "settings">Дискретизация
Чувствительность
Набор цветов
Область опред.
Линий в клетке
Сохранить картинку
Секунды:ФПС
Бумеранг
Чувствует время</entry>
<entry key = "colors">Спектр света
Тепловизор</entry>
<entry key = "states">Преобразование
Пересчёт..
+
загужен
Сохранено в </entry>
<entry key = "updater_errors">Нужны 2 функции в параметре и транслировании.
Слишком много переменных
графике
Нужна переменная t или x и y в
Слишком длинная 'goto' рекурсия: длина</entry>
<entry key = "calculator_errors">в
графике
функции
граматике
переменных
калькуляторе
константе</entry>
<entry key = "parser_errors">Непонятный сомвол
Слишком мало аргументов
Слишком много аргументов
в скобках
в
Криво размещена</entry>
<entry key = "buttons">Начать
Обновить
Настройки
Таймер
Назад
Сохранить
Загрузить</entry>
<entry key = "helpers">Помощь
Помощь пользования
Помощь с калькулятором
Дополнительная информация</entry>
<entry key = "resizers">Масштаб
Ось X
Ось Y</entry>
<entry key = "text_elements">Графики
Функции
Счетчик</entry>
<entry key = "main_settings">Язык
Линии &lt;->(пикс.)
Кол-во графиков</entry>
<entry key = "help">help 10
part 4
Нарисовать график
Нажмите "+" и напишите функцию
в появиввшемся текстовом поле
Затем нажмите Enter.
part 8
Таймер:
Напишите выражение для графика,
используя переменную 'tm',
затем нажмите 'Таймер' и кликните
'Начать' в открывшейся панели.
Можете настроить таймер в этой панели.
Так же можете нажать правой кнопкой мыши по
кнопке 'Таймер', чтобы запустить или остановить его.
part 7
Масштаб:
'Левый' клик сравняет масштабы
двух осей.
'Правый' клик по этой кнопке сменит её действие:
Ось X/Ось Y - повороты колесика мыши
/ жесты на тачпаде будут менять масштаб
только Оси X/Оси Y.
part 3
Дополнительно:
'Правый' клик по кнопке '-' в поле графика
откроет панель дополнительной информации.
part 4
Параметрическое задание:
Используя переменную t,
напишите выражение для x, поставьте ':'
и напишите выражение для y, нажмите Enter.
part 17
Неявное задание:
Равенство:
Графер покажет цвет, где выражение верно.
(Чувствительность - максимальная разность
между двумя соседними пикселями вокруг нуля)
f(x,y)=g(x,y)
Неравенство:
Напишите неравенство, используя x и y и Графер
покажет цвет там, где это выражение истинно.
f(x,y)&lt;g(x,y)
Спектр:
Напишите функцию вида z(x, y) и Графер покажет цвет,
который зависит от значения выражения
от синего до красного, как в тепловизоре, или
от красного до фиолетового по радуге.
Чувствительность - для контроля толщины радуги.
z(x,y)
part 6
Трансляция:
Трансляция - изменение положения точки,
Напишите выражения для x и y, в зависимости от
начальных координат точки, разделите их ":" -
как параметрическое задание,
только вместо t x и y;
part 4
Рекурсия:
Вы можете исполизовать рекурсию,
но будте осторожны: продолжительные
рекурсии выбрасывают ошибки stack over flow.
part 6
Примеры:
f(x)=if(x&lt;1,1,x*f(x-1)) - факториал
2sin(t):cos(t) - рисует эллипс
cos(t)*sin(tm*t):sin(t)*sin(tm*t) -
полярные координаты r(a)=sin(tm*a)
cos(x) + cos(y) - красивая картинка
part 7
Настройки:
Изменение языка в настройках.
Здесь можно сохранить/загрузить проект.
Линии &lt;-> - минимальное расстояние между
линиями сетки графера.
Кол-во графиков - сколько функций графиков
отображается одновременно.
help 7
part 8
Как пользоваться?
Введите пример в поле счетчика и нажмите Enter.
Нажмите правой кнопкой мыши на поле счетчика,
чтобы сжать окно Графера.
Если хотите, можете добавить свои собственные
функции и константы,
Их можно написать в поле 'Функции',
отделяя их друг от друга нажатием Enter.
part 5
Личные константы:
В поле функций напишите
имя константы + "=" + напишите пример.
Вы можете переопределять внутренние функции и константы.
Константы считаются в порядке, в котором записаны.
part 5
Как писать личные функции?
Напишите имя функции + "=" + выражение.
Вы можете вызывать переменные по этим именам:
x; y; z; t; x + какая-нибудь буква, например x龙.
Строки без знака "=" считаются комментариями.
part 6
Мат. знаки:
+, -, *, / обычные знаки
^ - возведение в степень
% - остаток от деления
&lt;, >, = возвращают 1, если выражение
истинно, иначе 0
part 20
Функции:
sqrt, cbrt - квадратный и кубический корни
pow - возведение в степень
exp - экспонента (работает быстрее, чем "e^x")
sign - знак числа (-1, 0, 1)
lg, ln, ld, log - логарифмы
sigm - сигмоид - sigm(x) = 1 / (1 + e^-x)
hypot - гипотенуза - sqrt(x^2 + y^2)
sin, cos, tg, ctg, arcsin, arccos, arctg, arcctg, arctgTwo
- тригонометрические функции,
встевьте 'd' после названий
чтобы конвертировать радианы в градусы
abs - модуль числа
floor - наибольшее целое, меньше данного
ceil - наименьшее целое, больше данного
round - округление по математическим правилам
min / max - меньшее/большее из нескольких данных
arr(idx, a...) - возвращает элемент данного массива 'a'
if(x,y,z) - возвращает y если x не 0, иначе z
ifs(x) - возвращает 1, если x не 0, иначе 0
part 17
Константы: (в СИ)
pi - пи - 3.14
e - экспонента = 2.71
G - гравитационная постоянная = 6.67 * 10 ^ -11
h - постоянная Планка = 6.63 * 10 ^ -34
c - скорость света = 3 * 10 ^ 8
eps - диэлектрическая проницаемость = 8.85 * 10 ^ -12
NA - число Авогадро = 6.02 * 10 ^ 23
R - газовая постоянная = 8.31
k - постоянная Больцмана = 1.38 * 10 ^ -23
EARTH - масса Земли = 6 * 10 ^ 24
SUN - масса Солнца = 2 * 10 ^ 30
PROTON - масса протона = 1.67 * 10 ^ -27
ELCT - масса электрона = 9.1 * 10 ^ -31
eCHARGE - заряд электрона = 1.6 * 10 ^ -19
au - астрономическая единица = 1.5 * 10 ^ 11
pc - парсек = 3.1 * 10 ^ 16
part 11
Примеры:
sqrt(4) == 2
pow(2, 4) == 16
ln(e) == 1
log(8, 2) == 3
arcsind(1) == 90
arctgTwo(1, 0) == pi / 2
num = sqrt(5) - num - константа
lb = ld(x) - то же, что и ld(x)
= логарифм из x по основанию 2
myfunc = sin(x) + cos(y) - используйте, как myfunc(x,y)
help 4
part 16
Предупреждение:
Графер может некорректно отвечать
на непонятные ему запросы, например,
если написать f(x)=c(x,x) и c=x+y
графер выведет ошибку, потому что все равно
подумает, что c - это скорость света - константа.
если вы хотите переопределить константу,
встевьте перед '=' ':',
для предыдущего примера напишите с:=x+y.
Также иногда происходит такое:
f(x)=rx, r=2
Слишком много аргумертов!
r - функция, поэтому, если за ней подряд идет что-то
ещё, то считается, что это аргумент (sinx),
a у r нет аргументов.
xr - целиком переменная, а xra (ra=2) - работает.
part 4
Чувствует время:
Если эта функция отключена, таймер не обновляет
график, это увеличит производительность
на тяжёлых анимациях.
part 19
Параметры:
Если назвать константу "lookX" или "lookY",
Графер переместит камеру в эту позицию,
точка (lookX; lookY) окажется посередине экрана.
Создайте константы "scaleX" и "scaleY", чтобы
изменять приближение, scaleX/scaleY значат, что
в единице графика scaleX/scaleY пикселей экрана.
Можете использовать эти константы в своих
формулах без инициализации.
Если вы используете рекурсию констант,
(для сохранения значения до следующей итерации
таймера), до определения константы будут равны 0.
Используйте параметер 'goto' чтобы поменять следующую
считающуюся константу (константы нумеруются с 0)
установка 'goto' значит, что следующая вычисляемая
константа будет под номером 'goto'.
Используйте параметер 'gotoLen', чтобы установить
максимальное кол-во раз, которое 'goto' может быть
использовано за одно обновление или цикл таймера.
part 32
Сохранения:
Все сохранения в формате xml в java properties.
Файл состоит из нескольких параметров:
calculator - сохранено поле "Счетчик"
functions - поле "Функции"
resize_idx - способ масштабирования - число 0-3
timer_info - четыре числа, как в настройках таймера:
длительность:фпс и на новой строке интервал
view_params - четыре числа, каждое на своей строке:
offset x, offset y, scale x, scale y
offset x и y - координаты левого нижнего угла
изображения
scale x и y - колличество пикселей экрана,
которое помещается единице на графике
graphs_count - колличество графиков -
любое натуральное число или 0
graphic+номер - поле графика
graphic_info+тот же номер - информация о графике:
1) название графика - например f для f(x),
суть названия - определить цвет графика
2) дискретизация (натуральное число > 2)
3) чувствует ли время (true/false)
4) тип графика
(Function/Parametric/Implicit/Translation)
дальше зависит от самого графика
если Function, то ничего,
если Parametric, то интервал,
если Implicit, то Чувствительность и на следущей
строке вид радуги (0-радуга,1-тепловизор)
если Translation, то кол-во линий в клетке поля
по желанию можно добавить язык:
language - имя языка, например, >Русский&lt;.
</entry>
</properties>